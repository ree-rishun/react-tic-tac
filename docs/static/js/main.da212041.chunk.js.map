{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Modal","open","this","message","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","finished","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da212041.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// マス\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n// モーダル\nclass Modal extends React.Component {\n  render() {\n    return (\n      <dialog\n        open={this.props.open}\n        className=\"resultDialog\">\n        <h2>Game Set</h2>\n        <p>{this.props.message}</p>\n      </dialog>\n    )\n  }\n}\n\n// 盤面\nclass Board extends React.Component {\n  // マス目の内容\n  renderSquare(i) {\n    return <Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  // 盤面\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\n// ゲームの進行処理\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  // クリック時の処理\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  // タイムトラベル機能\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Start Over';\n      return (\n        <li key={move}>\n          <button\n            onClick={() => this.jumpTo(move)}\n            className={this.state.stepNumber === move ? \"nowMove\" : \"\"}\n          >\n            {desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    let finished = false;\n    if (winner) {\n      finished = true;\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <h1>TicTac</h1>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <div>{moves}</div>\n        </div>\n        <Modal\n          open={finished}\n          message={status}/>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// 勝敗判定\nfunction calculateWinner(squares) {\n  // 勝利パターン\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}